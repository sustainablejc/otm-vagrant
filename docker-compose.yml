version: '3'
services:
    nginx:
        image: nginx:latest
        restart: always
        #network_mode: host
        volumes:
            - ./configs/etc/nginx/sites-available:/etc/nginx/sites-available
            - ./configs/etc/nginx/sites-enabled:/etc/nginx/sites-enabled
            - ./configs/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./configs/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
            - ./configs/etc/nginx/includes:/etc/nginx/includes
            - ${HOME}/tools/docker/volumes/otm/static:/usr/local/otm/static
            - ${HOME}/tools/docker/volumes/otm/media:/usr/local/otm/media
        ports:
            - '8080:8080'

    database:
        image: kartoza/postgis:9.6-2.4
        environment:
            - POSTGRES_USER=otm
            - POSTGRES_PASS=otm
            - POSTGRES_DBNAME=otm
            - ALLOW_IP_RANGE=0.0.0.0/0
        volumes:
            - pg_data:/var/lib/postgresql
        ports:
            - '5432:5432'

    redis:
        image: redis:latest
        ports:
            - '6379:6379'

    otm-core:
       image: otm-core:1.1
       # command: gunicorn -w 2 -b "0.0.0.0:12000" opentreemap.wsgi:application
       #command: python manage.py runserver 0.0.0.0:12000
       command: tail -f /dev/null
       restart: always
       depends_on:
           - database
       environment:
           - ESRI_CLIENT_ID=
           - ESRI_CLIENT_SECRET=
           - GOOGLE_MAPS_KEY=
       working_dir: /usr/local/otm/app/opentreemap
       ports:
           - '12000:12000'
       volumes:
           - ${HOME}/tools/docker/volumes/otm/static:/usr/local/otm/static
           - ${HOME}/tools/docker/volumes/otm/media:/usr/local/otm/media

#   otm-celery:
#       image: otm-core:1.1
#       command: celery -A "opentreemap.celery.app" -b "redis://redis:6379" worker -l debug 
#       command: tail -f /dev/null
#       working_dir: /usr/local/otm/app/opentreemap
#       volumes:
#           - ./otm_core/opentreemap:/usr/local/otm/app/opentreemap
#           - ./docker/volumes/static:/usr/local/otm/static
#           - ./docker/volumes/media:/usr/local/otm/media

    otm-tiler:
        image: otm-tiler:1.1
        command: node server.js
        #command: tail -f /dev/null
        working_dir: /usr/local/tiler
        environment:
            - OTM_CACHE_HOST=redis
            - OTM_DB_HOST=database
        ports:
            - '4000:4000'
            - '9229:9229'

    otm-ecoservice:
        image: otm-ecoservice:1.1
        command: ./ecoservice/ecobenefits
        #command: tail -f /dev/null
        working_dir: /usr/local/ecoservice
        restart: always
        depends_on:
            - database
        environment:
            - OTM_ECO_HOST=0.0.0.0
            - OTM_DB_HOST=database
            - OTM_ECO_DATA_DIR=data/
        ports:
            - '13000:13000'

volumes:
    pg_data:
        driver: local
    node_modules:
        driver: local
